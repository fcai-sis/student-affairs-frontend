// locales/en.ts
export default {
  general: {
    loading: "Loading...",
    submit: "Submit",
    ok: "OK",
    cancel: "Cancel",
    back: "Back",
    error: {
      somethingWentWrong: "Something went wrong",
    },
    remove: "Remove",
    close: "Close",
  },
  nav: {
    home: "Home",
    students: "Students",
    announcements: "Announcements",
    serviceRequests: "Service Requests",
    profile: "Profile",
    signOut: "Sign Out",
    graduation: "Create Graduation Project Team",
    assignHall: "Assign Students to Halls",
    more: "More",
  },
  pagination: {
    previous: "Previous",
    next: "Next",
  },
  auth: {
    title: "Login",
    username: "Username",
    password: "Password",
    login: "Login",
    success: "Successfully signed in",
    error: {
      invalidCredentials: "Invalid credentials",
    },
  },
  home: {
    title: "Home",
    welcome: "Welcome",
    search: "Search",
    searchPlaceholder: "Search for something",
    announcements: "Announcements",
    viewAllAnnouncements: "View All Announcements",
    serviceRequests: "Service Requests",
    viewAllServiceRequests: "View All Service Requests",
  },
  students: {
    title: "Students",
    noStudents: "No students",
    registerStudent: "Register Student",
  },
  registerStudent: {
    title: "Register Student",
    manual: {
      title: "Manual Student Registration",
      link: "Add Student Manually",
      linkHint: "Fill a form with necessary student information",
      add: "Add Student",
      submit: "Register Student",
      update: "Update Student",
      addSuccess: "Student registered successfully",
      updateSuccess: "Student updated successfully",
    },
    upload: {
      title: "Register Students from Excel File",
      uploadExcelFile: "Upload Excel File",
      uploadExcelHint: "Upload an excel file with student information",
      uploadWarning:
        "Please ensure that the student information is correct before uploading",
      success: "File uploaded successfully",
      mapping: {
        title: "Map Columns",
        instructions:
          "Map the columns in the Excel file to the fields in the database",
        unset: "Select a field",
        success: {
          updateField: "Field mapping updated successfully",
          cancel: "Registration session cancelled successfully",
        },
        error: {
          missingColumns: "Please map all columns",
          updateFailed: "Failed to update field mapping",
          cancelFailed: "Failed to cancel registration session",
        },
      },
      commit: {
        title: "Commit Registration Session",
        success: "Registration session committed successfully",
        error: {
          commitFailed: "Failed to commit registration session",
          row: "Failed to commit row {rowNumber}",
        },
      },
    },
  },
  announcements: {
    title: "Announcements",
    noAnnouncements: "No announcements",
    create: {
      title: "Create Announcement",
      form: {
        title: "Title",
        content: "Content",
        severity: "Severity",
        info: "Info",
        warning: "Warning",
        danger: "Danger",
        departments: "Departments",
        levels: "Levels",
      },
      success: "Announcement created successfully",
      error: {
        createFailed: "Failed to create announcement",
      },
    },
  },
  serviceRequests: {
    title: "Service Requests",
    empty: "No service requests",
    failedload: "Failed to load service requests",
    createServiceRequest: "Create Service Request",
    details: "Service Request Details",
    status: "Status",
    accept: "Accept",
    reject: "Reject",
    complete: "Complete",
    studentName: "Student Name",
    studentId: "Student ID",
    failedaccept: "Failed to accept service request",
    failedreject: "Failed to reject service request",
    failedcomplete: "Failed to complete service request",
    accepted: "Service request accepted",
    rejected: "Service request rejected",
    completed: "Service request completed",
    claimAt: "Claim Date",
    rejectionReason: "Rejection Reason",
  },
  profile: {
    title: "Profile",
    name: "Name",
    email: "Email",
    updating: "Updating...",
    update: "Update Profile",
    success: "Profile updated successfully",
    error: {
      updateFailed: "Failed to update profile",
    },
  },
  graduation: {
    title: "Create a Graduation Project Team",
    enrollments: "Enrollments",
    instructorTeachings: "Instructor Teachings",
    assistantTeachings: "TA Teachings",
    selectEnrollment: "Select Enrollment",
    selectInstructorTeaching: "Select Instructor Teaching",
    selectAssistantTeaching: "Select TA Teaching",
    addEnrollment: "Add Enrollment",
    addInstructorTeaching: "Add Instructor Teaching",
    addAssistantTeaching: "Add TA Teaching",
    success: "Team created successfully",
    error: {
      createFailed: "Failed to create team",
    },
    search: "Search",
  },
  filter: {
    search: "Search",
    department: "Department",
    gender: "Gender",
    level: "Level",
  },
} as const;
